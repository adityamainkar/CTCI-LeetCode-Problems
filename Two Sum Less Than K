Two Sum Less Than K

Given an array A of integers and integer K, return the maximum S such that there exists i < j with A[i] + A[j] = S and S < K. 
If no i, j exist satisfying this equation, return -1.
Example 1:

Input: A = [34,23,1,24,75,33,54,8], K = 60
Output: 58
Explanation: 
We can use 34 and 24 to sum 58 which is less than 60.



Use the two pointer technique:
Time Complexity: O(nlogn)
Sort the array, and point i to 0 and j to len(array) - 1
If sum of A[i] and A[j] is greater than K, decrease j
If sum of A[i] and A[j] is smaller than K, increase i
class Solution:
    def twoSumLessThanK(self, A, K):
        A.sort()
        i, j, res = 0, len(A) - 1, -1
        while i < j:
            if A[i] + A[j] >= K:
                j -= 1
            else:
                res = max(res, A[i] + A[j])
                i += 1
        return res
