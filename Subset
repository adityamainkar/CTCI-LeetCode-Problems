Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.
Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        res = [[]]
        for n in nums:
            for i in range(len(res)):
                res.append(res[i]+[n])
        return res
        
        
#Mrthod 2

def __init__(self):
       self.res = []
       
   def subsets(self, nums, path=[]):
       self.res.append(path)
       for i in range(len(nums)):
           self.subsets(nums[i+1:], path+[nums[i]])
       return self.res
